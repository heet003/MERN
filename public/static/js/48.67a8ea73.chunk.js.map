{"version":3,"file":"static/js/48.67a8ea73.chunk.js","mappings":"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","sources":["shared/components/FormElements/Image.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/hooks/form.js","shared/hooks/http-hook.js","shared/util/validators.js","user/pages/Auth.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./Image.css\";\r\nimport Button from \"./Button\";\r\nfunction Image(props) {\r\n  const [file, setFile] = useState();\r\n  const [url, setUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n  const imgRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  function clickHandler() {\r\n    imgRef.current.click();\r\n  }\r\n\r\n  function pickedHandler(event) {\r\n    let file;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      file = event.target.files[0];\r\n      setFile(file);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n      props.onInput(props.id, file, fileIsValid);\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={imgRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {url &&   <img src={url} alt=\"Preview\" />}\r\n          {!url && <p>Please Pick An Image.</p>}\r\n        </div>\r\n\r\n        <Button type=\"button\" onClick={clickHandler}>\r\n          CHOOSE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.error}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Image;\r\n","import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from \"../../util/validators\";\nimport \"./Input.css\";\n\nfunction inputReducer(state, action) {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\": {\n      return {\n        ...state,\n        isTouched: true,\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nfunction Input(props) {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid || false,\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  function changeHandler(event) {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  }\n\n  function touchHandler() {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  }\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n}\n\nexport default Input;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport Modal from \"./Modal\";\nimport Button from \"../FormElements/Button\";\n\nfunction ErrorModal(props) {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n}\n\nexport default ErrorModal;\n","import { useCallback, useReducer } from \"react\";\n\nfunction formReducer(state, action) {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    case \"SET_DATA\":\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      };\n    default:\n      return state;\n  }\n}\n\nexport function useForm(initialInputs, initialFormValidity) {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      formIsValid: formValidity,\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n}\n","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport function useHttpClient() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal,\n        });\n        const responseData = await response.json();\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  function clearError() {\n    setError(null);\n  }\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n}\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useState, useContext } from \"react\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport Loader from \"../../shared/components/UIElements/LoadingSpinner\";\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./Auth.css\";\nimport Image from \"../../shared/components/FormElements/Image\";\n\nfunction Auth() {\n  const auth = useContext(AuthContext);\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: \"\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  function switchModeHandler() {\n    if (!isLoggedIn) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined,\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: \"\",\n            isValid: false,\n          },\n          image: {\n            value: null,\n            isValid: false,\n          },\n        },\n        false\n      );\n    }\n    setIsLoggedIn((prevMode) => !prevMode);\n  }\n\n  //  Form Submission Handler\n  async function submitHandler(event) {\n    event.preventDefault();\n    if (isLoggedIn) {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BASE_URL}/api/users/login`,\n          \"POST\",\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          }),\n          {\n            \"Content-Type\": \"application/json\",\n          }\n        );\n        auth.login(responseData.userId, responseData.token);\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append(\"name\", formState.inputs.name.value);\n        formData.append(\"email\", formState.inputs.email.value);\n        formData.append(\"password\", formState.inputs.password.value);\n        formData.append(\"image\", formState.inputs.image.value);\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BASE_URL}/api/users/signup`,\n          \"POST\",\n          formData\n        );\n        auth.login(responseData.userId, responseData.token);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <Loader asOverlay />}\n        <h2>{isLoggedIn ? \"Login\" : \"Sign Up\"} Required</h2>\n        <hr />\n        <form onSubmit={submitHandler}>\n          {!isLoggedIn && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter your name.\"\n              onInput={inputHandler}\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(8)]}\n            errorText=\"Please enter a valid password, at least 8 characters.\"\n            onInput={inputHandler}\n          />\n          {!isLoggedIn && <Image center id=\"image\" onInput={inputHandler} />}\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoggedIn ? \"LOGIN\" : \"SIGNUP\"}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoggedIn ? \"SIGNUP\" : \"LOGIN\"}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n}\n\nexport default Auth;\n"],"names":["props","file","setFile","useState","url","setUrl","isValid","setIsValid","imgRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","_jsxs","className","children","_jsx","id","ref","style","display","type","accept","onChange","event","fileIsValid","target","files","length","onInput","concat","center","src","alt","Button","onClick","current","click","error","inputReducer","state","action","value","val","validate","validators","isTouched","inputState","dispatch","useReducer","initialValue","initialValid","changeHandler","touchHandler","element","placeholder","onBlur","rows","htmlFor","label","errorText","Modal","onCancel","onClear","header","show","footer","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","useHttpClient","isLoading","setIsLoading","setError","activeHttpRequests","sendRequest","async","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","forEach","abortCtrl","abort","clearError","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","validator","trim","test","auth","useContext","AuthContext","isLoggedIn","setIsLoggedIn","inputHandler","setFormData","email","password","React","ErrorModal","Card","Loader","asOverlay","onSubmit","preventDefault","process","JSON","stringify","login","userId","token","console","log","formData","FormData","append","name","image","Input","Image","disabled","inverse","prevMode"],"sourceRoot":""}