{"version":3,"file":"static/js/72.b73c4c3d.chunk.js","mappings":"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","sources":["places/pages/UpdatePlace.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/hooks/form.js","shared/hooks/http-hook.js","shared/util/validators.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Loader from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./PlaceForm.css\";\n\nfunction UpdatePlace() {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BASE_URL}/api/places/${placeId}`\n        );\n        setLoadedPlace(responseData.place);\n        setFormData(\n          {\n            title: {\n              value: responseData.place.title,\n              isValid: true,\n            },\n            description: {\n              value: responseData.place.description,\n              isValid: true,\n            },\n          },\n          true\n        );\n      } catch (err) {}\n    }\n    fetchData();\n  }, [sendRequest, placeId, setFormData]);\n\n  async function submitHandler(event) {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BASE_URL}/api/places/${placeId}`,\n        \"PATCH\",\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value,\n        }),\n        {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + auth.token,\n        }\n      );\n      history.push(\"/\" + auth.userId + \"/places\");\n    } catch (err) {}\n  }\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {isLoading && <Loader asOverlay />}\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && (\n        <form className=\"place-form\" onSubmit={submitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.title}\n            initialValid={true}\n          />\n          <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (min. 5 characters).\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.description}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE PLACE\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default UpdatePlace;\n","import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from \"../../util/validators\";\nimport \"./Input.css\";\n\nfunction inputReducer(state, action) {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\": {\n      return {\n        ...state,\n        isTouched: true,\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nfunction Input(props) {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid || false,\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  function changeHandler(event) {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  }\n\n  function touchHandler() {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  }\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n}\n\nexport default Input;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport Modal from \"./Modal\";\nimport Button from \"../FormElements/Button\";\n\nfunction ErrorModal(props) {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n}\n\nexport default ErrorModal;\n","import { useCallback, useReducer } from \"react\";\n\nfunction formReducer(state, action) {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    case \"SET_DATA\":\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      };\n    default:\n      return state;\n  }\n}\n\nexport function useForm(initialInputs, initialFormValidity) {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      formIsValid: formValidity,\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n}\n","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport function useHttpClient() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal,\n        });\n        const responseData = await response.json();\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  function clearError() {\n    setError(null);\n  }\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n}\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n"],"names":["auth","useContext","AuthContext","isLoading","error","sendRequest","clearError","useHttpClient","loadedPlace","setLoadedPlace","useState","placeId","useParams","history","useHistory","formState","inputHandler","setFormData","useForm","title","value","isValid","description","useEffect","async","responseData","concat","process","place","err","fetchData","_jsxs","React","children","_jsx","Loader","asOverlay","ErrorModal","onClear","className","onSubmit","event","preventDefault","JSON","stringify","inputs","Authorization","token","push","userId","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","initialValid","VALIDATOR_MINLENGTH","Button","disabled","Card","inputReducer","state","action","val","validate","isTouched","props","inputState","dispatch","useReducer","changeHandler","target","touchHandler","placeholder","onChange","onBlur","rows","htmlFor","style","Modal","onCancel","header","show","footer","onClick","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequests","useRef","url","method","arguments","length","undefined","body","headers","httpAbortCtrl","AbortController","current","response","fetch","signal","json","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}